@using Microsoft.AspNet.Identity
@using ChoreTracker.WebMVC.DataContract.Comment
@model CommentListItemDTO

@{
    var parentContent = ViewData["parent"];
    var parentCommenter = ViewData["parentCommenter"];

    if (Model.ParentId == 0)
    {
        ViewData["commentMargin"] = "parent-comment";
    }
    else
    {
        ViewData["commentMargin"] = "child-comment";
    }
}

<div class="user-comment @Html.Raw(ViewData["commentMargin"])">
    <h6 class="comment-poster">
        @Model.Poster: @Model.CommentId
    </h6>
    @Html.DisplayFor(Model => Model.Content)
</div>
<div class="comment-option">
    @{
        var commentCreate = new CommentCreateDTO { ParentId = Model.CommentId, GroupId = Model.GroupId };
        var commentEdit = new CommentEditDTO { CommentId = Model.CommentId, Content = Model.Content };
        var commentDelete = new CommentDetailDTO { CommentId = Model.CommentId, Content = Model.Content, Poster = Model.Poster };
    }

    @if (Model.OwnerId == Guid.Parse(User.Identity.GetUserId()) || User.IsInRole("Admin") || User.IsInRole("GroupOwner"))
    {
        <div class="comment-button">
            @Html.Partial("~/Views/Comment/_CommentDelete.cshtml", commentDelete)
        </div>
    }
    @if (Model.OwnerId == Guid.Parse(User.Identity.GetUserId()))
    {
        <div class="comment-button">
            @Html.Partial("~/Views/Comment/_CommentEdit.cshtml", commentEdit)
        </div>
    }
    <div class="comment-button">
        @Html.Partial("~/Views/Comment/_CommentReply.cshtml", commentCreate, new ViewDataDictionary { { "parentContent", parentContent }, { "parentCommenter", parentCommenter } })
    </div>
</div>

